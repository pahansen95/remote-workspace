---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ include "name.full" . | quote }}
  name: {{ include "name.short" . | printf "%s-workspace" | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "name.full" . | quote }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ include "name.full" . | quote }}
    spec:
      serviceAccountName: {{ include "name.serviceAccount" . | quote }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - image: {{ include "cntr.image.uri" . | quote }}
          name: {{ include "name.short" . | printf "%s-workspace" | quote }}
          args: ["--log-level", "trace"]
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            # limits:
            #   cpu: {{ .Values.container.resources.cpu }}
            #   memory: {{ .Values.container.resources.mem }}
            {{- if gt (.Values.container.resources.gpu.nvidia | int) 0 }}
              nvidia.com/gpu: {{ .Values.container.resources.gpu.nvidia }}
            {{- end }}
            {{- if gt (.Values.container.resources.gpu.amd | int) 0 }}
              amd.com/gpu: {{ .Values.container.resources.gpu.amd }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "name.short" . | printf "%s-workspace-env-cfgmap" | quote }}
                optional: yes
          env:
            - name: SSHD_CONFIG
              value: {{ printf "%s/sshd_config" .Values.container.mounts.sshd | quote }}
          ports:
            - name: ssh
              protocol: TCP
              containerPort: 8022
          volumeMounts:
            - name: workspace-folder
              mountPath: {{ .Values.container.mounts.workspace }}
            # - name: ssh-data
            #   mountPath: /home/vscode/.ssh
            - name: ssh-data
              mountPath: /home/vscode/.ssh/config
              subPath: config
            - name: ssh-data
              mountPath: /home/vscode/.ssh/authorized_keys
              subPath: authorized_keys
            {{- range $key, $val := .Values.workspace.ssh.keys }}
            - name: ssh-data
              mountPath: {{ printf "/home/vscode/.ssh/%s" $key }}
              subPath: {{ $key }}
            {{- end }}
            - name: sshd-data
              mountPath: {{ printf "%s/%s" .Values.container.mounts.sshd "sshd_config" }}
              subPath: "sshd_config"
            - name: sshd-data
              mountPath: {{ printf "%s/%s" .Values.container.mounts.sshd "id_ed25519" }}
              subPath: "id_ed25519"
            - name: sshd-data
              mountPath: {{ printf "%s/%s" .Values.container.mounts.sshd "id_ed25519.pub" }}
              subPath: "id_ed25519.pub"
          {{- if .Values.workspace.files.secrets }}
          {{- if gt (len .Values.workspace.files.secrets) 0 }}
          {{- range $i, $file := .Values.workspace.files.secrets }}
            - name: "workspace-secret-files"
              mountPath: {{ printf "%s" $file.dest | quote }}
              subPath: {{ printf "%v" $i | quote }}
              readOnly: true
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.workspace.files.configMaps }}
          {{- if gt (len .Values.workspace.files.configMaps) 0 }}
          {{- range $i, $file := .Values.workspace.files.configMaps }}
            - name: "workspace-files"
              mountPath: {{ printf "%s" $file.dest | quote }}
              subPath: {{ printf "%v" $i | quote }}
              readOnly: true
          {{- end }}
          {{- end }}
          {{- end }}
      volumes:
        - name: workspace-folder
          persistentVolumeClaim:
            claimName: {{ include "name.short" . | printf "%s-workspace-folder-data" | quote }}
        - name: sshd-data
          projected:
            defaultMode: 0o400
            sources:
              # Private Key
              - secret:
                  name: {{ include "name.short" . | printf "%s-sshd-priv-key" | quote }}
                  optional: no
              # Public Key
              - configMap:
                  name: {{ include "name.short" . | printf "%s-sshd-pub-key" | quote }}
                  optional: no
              # Config
              - configMap:
                  name: {{ include "name.short" . | printf "%s-sshd-config" | quote }}
                  optional: no
        - name: ssh-data
          projected:
            defaultMode: 0o400
            sources:
              # SSH User Keys
              - secret:
                  name: {{ include "name.short" . | printf "%s-ssh-user-keys" | quote }}
              # SSH Config
              - configMap:
                  name: {{ include "name.short" . | printf "%s-workspace-ssh-config" | quote }}
              # SSH Authorized Keys
              - configMap:
                  name: {{ include "name.short" . | printf "%s-workspace-ssh-authorized-keys" | quote }}
      {{- if .Values.workspace.files.secrets }}
      {{- if gt (len .Values.workspace.files.secrets) 0 }}
        - name: "workspace-secret-files"
          secret:
            secretName: {{ include "name.short" . | printf "%s-workspace-secret-files" | quote }}
            defaultMode: 0400
      {{- end }}
      {{- end }}
      {{- if .Values.workspace.files.configMaps }}
      {{- if gt (len .Values.workspace.files.configMaps) 0 }}
        - name: "workspace-files"
          configMap:
            name: {{ include "name.short" . | printf "%s-workspace-files" | quote }}
            defaultMode: 0400
      {{- end }}
      {{- end }}
---
# Workspace Folder PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "name.short" . | printf "%s-workspace-folder-data" | quote }}
  annotations:
    # Instruct Helm Not to uninstall this resource (it will become orphaned)
    #   We do this to ensure data is not accidently deleted
    "helm.sh/resource-policy": keep
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.container.pvcs.workspace.size }}
{{- with .Values.container.pvcs.workspace.storageClass }}
  storageClassName: {{ . | quote }}
{{- end }}
---
{{- if .Values.workspace.env }}
# Environment Variables ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ include "name.full" . | quote }}
  name: {{ include "name.short" . | printf "%s-workspace-env-cfgmap" | quote }}
data: 
{{ .Values.workspace.env | toYaml | indent 2 }}
{{- end }}
---
# User Secret Files
{{- if .Values.workspace.files.secrets }}
{{- if gt (len .Values.workspace.files.secrets) 0 }}
apiVersion: v1
kind: Secret
type: Opaque
immutable: true
metadata:
  labels:
    app: {{ include "name.full" . | quote }}
  name: {{ include "name.short" . | printf "%s-workspace-secret-files" | quote }}
data:
{{- range $i, $file := .Values.workspace.files.secrets }}
  {{ printf "%v" $i | quote }}: {{ b64enc $file.data | quote }}
{{- end }}
{{- end }}
{{- end }}
---
# User Files
{{- if .Values.workspace.files.configMaps }}
{{- if gt (len .Values.workspace.files.configMaps) 0 }}
apiVersion: v1
kind: ConfigMap
immutable: true
metadata:
  labels:
    app: {{ include "name.full" . | quote }}
  name: {{ include "name.short" . | printf "%s-workspace-files" | quote }}
data:
{{- range $i, $file := .Values.workspace.files.configMaps }}
  {{ printf "%v" $i | quote }}: {{ b64enc $file.data | quote }}
{{- end }}
{{- end }}
{{- end }}
---
# SSH Client Config
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ include "name.full" . | quote }}
  name: {{ include "name.short" . | printf "%s-workspace-ssh-config" | quote }}
data: 
  config: |
{{ include "ssh.config" . | indent 4 }}
---
# SSH Client Keys
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: {{ include "name.full" . | quote }}
  name: {{ include "name.short" . | printf "%s-ssh-user-keys" | quote }}
type: Opaque
data:
{{- range $key, $val := .Values.workspace.ssh.keys }}
  {{ quote $key }}: {{ include "ssh.key" $val | b64enc }}
{{- end }}
---
# SSH Authorized Keys
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: {{ include "name.full" . | quote }}
  name: {{ include "name.short" . | printf "%s-workspace-ssh-authorized-keys" | quote }}
data: 
  authorized_keys: |
{{- range $i, $val := .Values.workspace.ssh.authorizedKeys }}
{{ trim $val | indent 4 }}
{{ end }}

